name: Backend Release Pipeline

on:
  push:
    branches:
      - master  # Run only when pushing to master

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      # Detect version from pom.xml (Maven)
      - name: Get Version from pom.xml
        if: exists('pom.xml')
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      # Detect version from build.gradle (Gradle)
      - name: Get Version from build.gradle
        if: "!exists('pom.xml') && exists('build.gradle')"
        run: echo "VERSION=$(grep 'version' build.gradle | awk -F' ' '{print $2}' | tr -d '\"')" >> $GITHUB_ENV

      # Check if Tag Already Exists
      - name: Check if Tag Already Exists
        id: check_tag
        run: |
          TAG_EXISTS=$(git ls-remote --tags origin refs/tags/v${VERSION})
          if [ -n "$TAG_EXISTS" ]; then
            echo "Tag v${VERSION} already exists. Exiting."
            exit 1
          fi

      # Create Git Tag
      - name: Create Git Tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${VERSION}
          git push origin v${VERSION}

      # Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: "Automated release for version v${{ env.VERSION }}"
          draft: false
          prerelease: false
